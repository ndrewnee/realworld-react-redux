{"version":3,"sources":["api/index.ts","features/article/articleSlice.ts","features/editor/editorSlice.ts","features/login/loginSlice.ts","features/register/registerSlice.ts","features/settings/settingsSlice.ts","features/app/appSlice.ts","features/home/homeSlice.ts","features/profile/profileSlice.ts","features/articleList/articleListSlice.ts","app/reducer.ts","app/store.ts","app/hooks.ts","components/Header.tsx","features/article/ArticleActions.tsx","features/article/ArticleMeta.tsx","components/ListErrors.tsx","features/article/CommentInput.tsx","features/article/DeleteButton.tsx","features/article/Comment.tsx","features/article/CommentList.tsx","features/article/CommentContainer.tsx","features/article/Article.tsx","features/editor/Editor.tsx","features/home/Banner.tsx","features/articleList/ArticlePreview.tsx","features/articleList/ListPagination.tsx","features/articleList/ArticleList.tsx","features/home/MainView.tsx","features/home/Tags.tsx","features/home/Home.tsx","features/login/Login.tsx","features/profile/ProfileGeneral.tsx","features/profile/Profile.tsx","features/profile/ProfileFavorites.tsx","features/register/Register.tsx","features/settings/SettingsForm.tsx","features/settings/Settings.tsx","features/app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["API_ROOT","process","REACT_APP_BACKEND_URL","token","tokenPlugin","req","set","makeRequest","a","response","body","requests","url","superagent","del","use","get","put","post","encode","encodeURIComponent","limit","count","page","omitSlug","article","slug","undefined","api","Articles","all","byAuthor","author","byTag","tag","favorite","favoritedBy","feed","unfavorite","update","create","Auth","current","login","user","register","save","Comments","commentId","forArticle","Profile","follow","username","unfollow","Tags","getAll","setToken","newToken","initialState","comments","pageLoad","createAsyncThunk","Promise","deleteArticle","addComment","deleteComment","articleSlice","createSlice","name","reducers","pageUnload","extraReducers","builder","addCase","fulfilled","state","payload","errors","comment","concat","rejected","error","message","filter","c","id","selectArticle","actions","title","description","tagList","inProgress","submitArticle","editorSlice","updateField","pending","selectEditor","editor","auth","window","localStorage","setItem","loginSlice","selectLogin","signup","registerSlice","selectRegister","saveUser","settingsSlice","selectSettings","settings","getItem","appSlice","appLoaded","redirectTo","currentUser","redirect","logout","redirectUrl","selectApp","app","articlesByTag","articlesByTab","tab","homeSlice","changeTag","changeTab","tags","selectHome","home","favoritesPageLoad","followUser","unfollowUser","profileSlice","profile","selectProfile","articlesCount","currentPage","pager","favoriteArticle","unfavoriteArticle","articlesByPage","articleListSlice","changePage","articles","homePageLoad","profilePageLoad","map","favorited","favoritesCount","selectArticleList","articleList","createReducer","history","router","connectRouter","createBrowserHistory","basename","store","configureStore","reducer","middleware","getDefaultMiddleware","routerMiddleware","useAppDispatch","useDispatch","useAppSelector","useSelector","LoggedOut","React","memo","className","to","LoggedIn","src","image","alt","Header","ArticleActions","dispatch","onClick","ArticleMeta","Date","createdAt","toDateString","ListErrors","Object","keys","key","CommentInput","useState","setBody","onSubmit","event","preventDefault","placeholder","value","onChange","target","rows","type","DeleteButton","CommentComponent","CommentList","Comment","CommentContainer","Article","match","useEffect","params","markup","__html","DOMPurify","sanitize","marked","USE_PROFILES","html","dangerouslySetInnerHTML","Editor","tagInput","setTagInput","updateFieldEvent","changeTitle","changeDescription","changeBody","changeTagList","onAddTag","removeTagHandler","t","unmount","onKeyUp","disabled","Banner","ArticlePreview","favoriteButtonClass","ListPagination","range","i","Math","ceil","push","isCurrent","setPage","toString","ArticleList","length","YourFeedTab","GlobalFeedTab","TagFilterTab","MainView","Home","Login","email","setEmail","password","setPassword","submitForm","autoComplete","EditProfileSettings","props","isUser","FollowUserButton","classes","following","ProfileGeneral","isFavorite","bio","ProfileFavorites","Register","setUsername","SettingsForm","onSubmitForm","setUser","updateState","field","Settings","removeItem","App","fallback","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63682ad6.chunk.js","sourcesContent":["import { ArticleEdit, ArticleListResponse, ArticleResponse } from 'api/article'\nimport { ProfileResponse } from 'api/profile'\nimport { LoginRequest, RegisterRequest, SaveUserRequest, UserResponse } from 'api/user'\nimport superagent from 'superagent'\nimport { CommentResponse, CommentListResponse } from './comment'\nimport { TagsResponse } from './tag'\n\nconst API_ROOT = process.env.REACT_APP_BACKEND_URL || 'https://conduit.productionready.io/api'\nlet token: string | null = null\n\nconst tokenPlugin: superagent.Plugin = (req) => {\n  if (token) {\n    req.set('authorization', `Token ${token}`)\n  }\n}\n\nconst makeRequest = async (req: superagent.Request) => {\n  try {\n    const response = await req\n    return response.body\n  } catch (err) {\n    if (err.response?.body) {\n      return err.response.body\n    }\n\n    throw err\n  }\n}\n\nconst requests = {\n  del: (url: string) => makeRequest(superagent.del(`${API_ROOT}${url}`).use(tokenPlugin)),\n  get: (url: string) => makeRequest(superagent.get(`${API_ROOT}${url}`).use(tokenPlugin)),\n  put: (url: string, body?: any) =>\n    makeRequest(superagent.put(`${API_ROOT}${url}`, body).use(tokenPlugin)),\n  post: (url: string, body?: any) =>\n    makeRequest(superagent.post(`${API_ROOT}${url}`, body).use(tokenPlugin)),\n}\n\nconst Auth = {\n  current: (): Promise<UserResponse> => requests.get('/user'),\n  login: (user: LoginRequest): Promise<UserResponse> => requests.post('/users/login', { user }),\n  register: (user: RegisterRequest): Promise<UserResponse> => requests.post('/users', { user }),\n  save: (user: SaveUserRequest): Promise<UserResponse> => requests.put('/user', { user }),\n}\n\nconst Tags = {\n  getAll: (): Promise<TagsResponse> => requests.get('/tags'),\n}\n\nconst encode = encodeURIComponent\nconst limit = (count: number, page?: number) => `limit=${count}&offset=${page ? page * count : 0}`\nconst omitSlug = (article: ArticleEdit) => ({ ...article, slug: undefined })\n\nconst Articles = {\n  all: (page?: number): Promise<ArticleListResponse> =>\n    requests.get(`/articles?${limit(10, page)}`),\n  byAuthor: (author: string, page?: number): Promise<ArticleListResponse> =>\n    requests.get(`/articles?author=${encode(author)}&${limit(5, page)}`),\n  byTag: (tag: string, page?: number): Promise<ArticleListResponse> =>\n    requests.get(`/articles?tag=${encode(tag)}&${limit(10, page)}`),\n  del: (slug: string): Promise<{}> => requests.del(`/articles/${slug}`),\n  favorite: (slug: string): Promise<ArticleResponse> => requests.post(`/articles/${slug}/favorite`),\n  favoritedBy: (author: string, page?: number): Promise<ArticleListResponse> =>\n    requests.get(`/articles?favorited=${encode(author)}&${limit(5, page)}`),\n  feed: (): Promise<ArticleListResponse> => requests.get('/articles/feed?limit=10&offset=0'),\n  get: (slug: string): Promise<ArticleResponse> => requests.get(`/articles/${slug}`),\n  unfavorite: (slug: string): Promise<ArticleResponse> =>\n    requests.del(`/articles/${slug}/favorite`),\n  update: (article: ArticleEdit): Promise<ArticleResponse> =>\n    requests.put(`/articles/${article.slug}`, { article: omitSlug(article) }),\n  create: (article: ArticleEdit): Promise<ArticleResponse> =>\n    requests.post('/articles', { article }),\n}\n\nconst Comments = {\n  create: (slug: string, body: string): Promise<CommentResponse> =>\n    requests.post(`/articles/${slug}/comments`, { body }),\n  del: (slug: string, commentId: string): Promise<{}> =>\n    requests.del(`/articles/${slug}/comments/${commentId}`),\n  forArticle: (slug: string): Promise<CommentListResponse> =>\n    requests.get(`/articles/${slug}/comments`),\n}\n\nconst Profile = {\n  follow: (username: string): Promise<ProfileResponse> =>\n    requests.post(`/profiles/${username}/follow`),\n  get: (username: string): Promise<ProfileResponse> => requests.get(`/profiles/${username}`),\n  unfollow: (username: string): Promise<ProfileResponse> =>\n    requests.del(`/profiles/${username}/follow`),\n}\n\nconst api = {\n  Articles,\n  Auth,\n  Comments,\n  Profile,\n  Tags,\n  setToken: (newToken: string | null) => {\n    token = newToken\n  },\n}\n\nexport default api\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport api from 'api'\nimport { Article } from 'api/article'\nimport { Comment } from 'api/comment'\nimport { RootState } from 'app/store'\n\ninterface ArticleState {\n  comments: Comment[]\n  article?: Article | null\n  errors?: {\n    [k: string]: string\n  }\n}\n\nconst initialState: ArticleState = {\n  comments: [],\n}\n\nexport const pageLoad = createAsyncThunk('article/pageLoad', async (slug: string) =>\n  Promise.all([api.Articles.get(slug), api.Comments.forArticle(slug)]),\n)\n\nexport const deleteArticle = createAsyncThunk('article/deleteArticle', api.Articles.del)\n\nexport const addComment = createAsyncThunk(\n  'article/addComment',\n  async ({ slug, body }: { slug: string; body: string }) => api.Comments.create(slug, body),\n)\n\nexport const deleteComment = createAsyncThunk(\n  'article/deleteComment',\n  async ({ slug, commentId }: { slug: string; commentId: string }) => [\n    commentId,\n    await api.Comments.del(slug, commentId),\n  ],\n)\n\nconst articleSlice = createSlice({\n  name: 'article',\n  initialState,\n  reducers: {\n    pageUnload: () => initialState,\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(pageLoad.fulfilled, (state, { payload }) => {\n        state.article = payload?.[0].article ?? null\n        state.comments = payload?.[1].comments\n      })\n      .addCase(addComment.fulfilled, (state, { payload }) => {\n        state.errors = payload.errors\n        state.comments = payload.comment ? state.comments.concat([payload.comment]) : []\n      })\n      .addCase(addComment.rejected, (state, { error }) => {\n        state.errors = { [error.name!]: error.message! }\n      })\n      .addCase(deleteComment.fulfilled, (state, { payload }) => {\n        state.comments = state.comments?.filter((c) => c.id !== payload[0])\n      })\n  },\n})\n\nexport const selectArticle = (state: RootState) => state.article\n\nexport const { pageUnload } = articleSlice.actions\n\nexport default articleSlice.reducer\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport api from 'api'\nimport { Article, ArticleEdit } from 'api/article'\nimport { RootState } from 'app/store'\n\ninterface EditorState {\n  article: Pick<Article, 'slug' | 'title' | 'description' | 'body' | 'tagList'>\n  inProgress: boolean\n  errors?: {\n    [k: string]: string\n  }\n}\n\ntype UpdateFieldPayload = PayloadAction<{\n  title?: string\n  description?: string\n  body?: string\n  tagList?: string[]\n}>\n\nconst initialState: EditorState = {\n  article: {\n    slug: '',\n    title: '',\n    description: '',\n    body: '',\n    tagList: [],\n  },\n  inProgress: false,\n}\n\nexport const pageLoad = createAsyncThunk('editor/pageLoad', async (slug: string | null) =>\n  slug ? api.Articles.get(slug) : null,\n)\n\nexport const submitArticle = createAsyncThunk(\n  'editor/submitArticle',\n  async (article: ArticleEdit) =>\n    article.slug ? api.Articles.update(article) : api.Articles.create(article),\n)\n\nconst editorSlice = createSlice({\n  name: 'editor',\n  initialState,\n  reducers: {\n    pageUnload: () => initialState,\n    updateField: (state, { payload }: UpdateFieldPayload) => {\n      if (!state.article) {\n        return\n      }\n\n      state.article.title = payload?.title ?? state.article.title\n      state.article.description = payload?.description ?? state.article.description\n      state.article.body = payload?.body ?? state.article.body\n      state.article.tagList = payload?.tagList ?? state.article.tagList\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(pageLoad.fulfilled, (state, { payload }) => {\n        state.article = payload?.article ?? state.article\n        state.errors = payload?.errors\n        state.inProgress = false\n      })\n      .addCase(pageLoad.rejected, (state, { error }) => {\n        state.errors = { [error.name!]: error.message! }\n      })\n      .addCase(submitArticle.pending, (state) => {\n        state.inProgress = true\n      })\n      .addCase(submitArticle.fulfilled, (state, { payload }) => {\n        state.errors = payload?.errors\n        state.inProgress = false\n      })\n      .addCase(submitArticle.rejected, (state, { error }) => {\n        state.errors = { [error.name!]: error.message! }\n        state.inProgress = false\n      })\n  },\n})\n\nexport const selectEditor = (state: RootState) => state.editor\nexport const { pageUnload, updateField } = editorSlice.actions\n\nexport default editorSlice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport api from 'api'\nimport { LoginRequest } from 'api/user'\nimport { RootState } from 'app/store'\n\ninterface LoginState {\n  inProgress: boolean\n  errors?: {\n    [k: string]: string\n  }\n}\n\nconst initialState: LoginState = {\n  inProgress: false,\n}\n\nexport const auth = createAsyncThunk('login/auth', async (user: LoginRequest) => {\n  const response = await api.Auth.login(user)\n  if (response.user?.token) {\n    window.localStorage.setItem('jwt', response.user.token)\n    api.setToken(response.user.token)\n  }\n\n  return response\n})\n\nconst loginSlice = createSlice({\n  name: 'login',\n  initialState,\n  reducers: {\n    pageUnload: () => initialState,\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(auth.pending, (state) => {\n        state.inProgress = true\n      })\n      .addCase(auth.fulfilled, (state, { payload }) => {\n        state.errors = payload.errors\n        state.inProgress = false\n      })\n      .addCase(auth.rejected, (state, { error }) => {\n        state.errors = { [error.name!]: error.message! }\n        state.inProgress = false\n      })\n  },\n})\n\nexport const { pageUnload } = loginSlice.actions\nexport const selectLogin = (state: RootState) => state.login\n\nexport default loginSlice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport api from 'api'\nimport { RegisterRequest } from 'api/user'\nimport { RootState } from 'app/store'\n\ninterface RegisterState {\n  inProgress: boolean\n  errors?: {\n    [k: string]: string\n  }\n}\n\nconst initialState: RegisterState = {\n  inProgress: false,\n}\n\nexport const signup = createAsyncThunk('register/signup', async (user: RegisterRequest) => {\n  const response = await api.Auth.register(user)\n  if (response.user?.token) {\n    window.localStorage.setItem('jwt', response.user.token)\n    api.setToken(response.user.token)\n  }\n\n  return response\n})\n\nconst registerSlice = createSlice({\n  name: 'register',\n  initialState,\n  reducers: {\n    pageUnload: () => initialState,\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(signup.pending, (state) => {\n        state.inProgress = true\n      })\n      .addCase(signup.fulfilled, (state, { payload }) => {\n        state.errors = payload.errors\n        state.inProgress = false\n      })\n      .addCase(signup.rejected, (state, { error }) => {\n        state.errors = { [error.name!]: error.message! }\n        state.inProgress = false\n      })\n  },\n})\n\nexport const { pageUnload } = registerSlice.actions\nexport const selectRegister = (state: RootState) => state.register\n\nexport default registerSlice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport api from 'api'\nimport { RootState } from 'app/store'\n\ninterface SettingsState {\n  inProgress: boolean\n  errors?: {\n    [k: string]: string\n  }\n}\n\nconst initialState: SettingsState = {\n  inProgress: false,\n}\n\nexport const saveUser = createAsyncThunk('settings/saveUser', api.Auth.save)\n\nconst settingsSlice = createSlice({\n  name: 'settings',\n  initialState,\n  reducers: {\n    pageUnload: () => initialState,\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(saveUser.pending, (state) => {\n        state.inProgress = true\n      })\n      .addCase(saveUser.fulfilled, (state, { payload }) => {\n        state.errors = payload.errors\n        state.inProgress = false\n      })\n      .addCase(saveUser.rejected, (state, { error }) => {\n        state.errors = { [error.name!]: error.message! }\n        state.inProgress = false\n      })\n  },\n})\n\nexport const selectSettings = (state: RootState) => state.settings\nexport const { pageUnload } = settingsSlice.actions\n\nexport default settingsSlice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport api from 'api'\nimport { User } from 'api/user'\nimport { RootState } from 'app/store'\nimport { deleteArticle } from 'features/article/articleSlice'\nimport { submitArticle } from 'features/editor/editorSlice'\nimport { auth } from 'features/login/loginSlice'\nimport { signup } from 'features/register/registerSlice'\nimport { saveUser } from 'features/settings/settingsSlice'\n\ninterface AppState {\n  appLoaded: boolean\n  redirectTo: string | null\n  currentUser: User | null\n  token: string | null\n}\n\nconst initialState: AppState = {\n  appLoaded: false,\n  redirectTo: null,\n  currentUser: null,\n  token: null,\n}\n\nexport const pageLoad = createAsyncThunk('app/pageLoad', async () => {\n  const token = window.localStorage.getItem('jwt')\n  if (token) {\n    api.setToken(token)\n    return api.Auth.current()\n  }\n})\n\nconst appSlice = createSlice({\n  name: 'app',\n  initialState,\n  reducers: {\n    redirect: (state) => {\n      state.redirectTo = null\n    },\n    logout: (state) => {\n      state.redirectTo = '/'\n      state.currentUser = null\n      state.token = null\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(pageLoad.fulfilled, (state, { payload }) => {\n        state.appLoaded = true\n        state.currentUser = payload?.user ?? null\n        state.token = payload?.user?.token ?? null\n      })\n      .addCase(auth.fulfilled, (state, { payload }) => {\n        state.currentUser = payload?.user ?? null\n        state.token = payload?.user?.token ?? null\n        state.redirectTo = payload.errors ? null : '/'\n      })\n      .addCase(signup.fulfilled, (state, { payload }) => {\n        state.currentUser = payload?.user ?? null\n        state.token = payload?.user?.token ?? null\n        state.redirectTo = payload.errors ? null : '/'\n      })\n      .addCase(saveUser.fulfilled, (state, { payload }) => {\n        state.currentUser = payload.user ?? state.currentUser\n        state.redirectTo = payload.errors ? null : '/'\n      })\n      .addCase(submitArticle.fulfilled, (state, { payload }) => {\n        const redirectUrl = payload.article ? `/article/${payload.article.slug}` : null\n        state.redirectTo = redirectUrl\n      })\n      .addCase(deleteArticle.fulfilled, (state, { payload }) => {\n        state.redirectTo = '/'\n      })\n  },\n})\n\nexport const { redirect, logout } = appSlice.actions\nexport const selectApp = (state: RootState) => state.app\n\nexport default appSlice.reducer\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport api from 'api'\nimport { ArticleListResponse } from 'api/article'\nimport { RootState } from 'app/store'\n\ninterface HomeState {\n  tab?: string | null\n  tag?: string | null\n  tags?: string[]\n}\n\nconst initialState: HomeState = {}\n\ntype ChangeTagPayload = PayloadAction<{\n  tag: string\n  pager: (page?: number) => Promise<ArticleListResponse>\n}>\n\ntype ChangeTabPayload = PayloadAction<{\n  tab: string\n  pager: (page?: number) => Promise<ArticleListResponse>\n}>\n\nexport const pageLoad = createAsyncThunk('home/pageLoad', async (token: string | null) =>\n  Promise.all([api.Tags.getAll(), token ? api.Articles.feed() : api.Articles.all()]),\n)\n\nexport const articlesByTag = createAsyncThunk('home/articlesByTag', async (tag: string) =>\n  api.Articles.byTag(tag),\n)\n\nexport const articlesByTab = createAsyncThunk('home/articlesByTab', async (tab: string) =>\n  tab === 'all' ? api.Articles.all() : api.Articles.feed(),\n)\n\nconst homeSlice = createSlice({\n  name: 'home',\n  initialState,\n  reducers: {\n    changeTag: (state, { payload }: ChangeTagPayload) => {\n      state.tag = payload.tag\n      state.tab = null\n    },\n    changeTab: (state, { payload }: ChangeTabPayload) => {\n      state.tab = payload.tab\n      state.tag = null\n    },\n    pageUnload: () => initialState,\n  },\n  extraReducers: (builder) => {\n    builder.addCase(pageLoad.fulfilled, (state, { payload }) => {\n      state.tags = payload?.[0].tags\n    })\n  },\n})\n\nexport const selectHome = (state: RootState) => state.home\n\nexport const { pageUnload, changeTag, changeTab } = homeSlice.actions\n\nexport default homeSlice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport api from 'api'\nimport { Profile } from 'api/profile'\nimport { RootState } from 'app/store'\n\ninterface ProfileState {\n  profile?: Profile\n}\n\nconst initialState: ProfileState = {}\n\nexport const pageLoad = createAsyncThunk('profile/pageLoad', async (username: string) =>\n  Promise.all([api.Profile.get(username), api.Articles.byAuthor(username)]),\n)\n\nexport const favoritesPageLoad = createAsyncThunk(\n  'profile/favoritesPageLoad',\n  async (username: string) =>\n    Promise.all([api.Profile.get(username), api.Articles.favoritedBy(username)]),\n)\n\nexport const followUser = createAsyncThunk('profile/followUser', api.Profile.follow)\n\nexport const unfollowUser = createAsyncThunk('profile/unfollowUser', api.Profile.unfollow)\n\nconst profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(pageLoad.fulfilled, (state, { payload }) => {\n        state.profile = payload?.[0].profile\n      })\n      .addCase(favoritesPageLoad.fulfilled, (state, { payload }) => {\n        state.profile = payload?.[0].profile\n      })\n      .addCase(followUser.fulfilled, (state, { payload }) => {\n        state.profile = payload.profile\n      })\n      .addCase(unfollowUser.fulfilled, (state, { payload }) => {\n        state.profile = payload.profile\n      })\n  },\n})\n\nexport const selectProfile = (state: RootState) => state.profile\n\nexport default profileSlice.reducer\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport api from 'api'\nimport { Article, ArticleListResponse } from 'api/article'\nimport { RootState } from 'app/store'\nimport {\n  articlesByTab,\n  articlesByTag,\n  changeTab,\n  changeTag,\n  pageLoad as homePageLoad,\n} from 'features/home/homeSlice'\nimport { favoritesPageLoad, pageLoad as profilePageLoad } from 'features/profile/profileSlice'\n\ninterface ArticleListState {\n  articles?: Article[] | null\n  articlesCount: number\n  currentPage: number\n  pager: (page?: number) => Promise<ArticleListResponse>\n}\n\nconst initialState: ArticleListState = {\n  articlesCount: 0,\n  currentPage: 0,\n  pager: api.Articles.all,\n}\n\nexport const favoriteArticle = createAsyncThunk(\n  'articleList/favoriteArticle',\n  api.Articles.favorite,\n)\n\nexport const unfavoriteArticle = createAsyncThunk(\n  'articleList/unfavoriteArticle',\n  api.Articles.unfavorite,\n)\n\nexport const articlesByPage = createAsyncThunk(\n  'articleList/articlesByPage',\n  async ({\n    page,\n    pager,\n  }: {\n    pager: (page?: number) => Promise<ArticleListResponse>\n    page: number\n  }) => pager(page),\n)\n\nconst articleListSlice = createSlice({\n  name: 'articleList',\n  initialState,\n  reducers: {\n    changePage: (state, { payload }: PayloadAction<number>) => {\n      state.currentPage = payload\n    },\n    pageUnload: () => initialState,\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(changeTag, (state, { payload }) => {\n        state.articles = null\n        state.articlesCount = 0\n        state.pager = payload.pager\n        state.currentPage = 0\n      })\n      .addCase(changeTab, (state, { payload }) => {\n        state.articles = null\n        state.articlesCount = 0\n        state.pager = payload.pager\n        state.currentPage = 0\n      })\n      .addCase(homePageLoad.fulfilled, (state, { payload }) => {\n        state.articles = payload?.[1].articles\n        state.articlesCount = payload?.[1].articlesCount\n      })\n      .addCase(articlesByTag.fulfilled, (state, { payload }) => {\n        state.articles = payload.articles\n        state.articlesCount = payload.articlesCount\n      })\n      .addCase(articlesByTab.fulfilled, (state, { payload }) => {\n        state.articles = payload.articles\n        state.articlesCount = payload.articlesCount\n      })\n      .addCase(articlesByPage.fulfilled, (state, { payload }) => {\n        state.articles = payload.articles\n        state.articlesCount = payload.articlesCount\n      })\n      .addCase(profilePageLoad.fulfilled, (state, { payload }) => {\n        state.articles = payload?.[1].articles\n        state.articlesCount = payload?.[1].articlesCount\n        state.currentPage = 0\n      })\n      .addCase(favoritesPageLoad.fulfilled, (state, { payload }) => {\n        state.articles = payload?.[1].articles\n        state.articlesCount = payload?.[1].articlesCount\n        state.currentPage = 0\n      })\n      .addCase(favoriteArticle.fulfilled, (state, { payload }) => {\n        state.articles = state.articles?.map((article) => {\n          if (article.slug === payload.article?.slug) {\n            article.favorited = payload.article.favorited\n            article.favoritesCount = payload.article.favoritesCount\n          }\n\n          return article\n        })\n      })\n    builder.addCase(unfavoriteArticle.fulfilled, (state, { payload }) => {\n      state.articles = state.articles?.map((article) => {\n        if (article.slug === payload.article?.slug) {\n          article.favorited = payload.article.favorited\n          article.favoritesCount = payload.article.favoritesCount\n        }\n\n        return article\n      })\n    })\n  },\n})\n\nexport const selectArticleList = (state: RootState) => state.articleList\n\nexport const { pageUnload, changePage } = articleListSlice.actions\n\nexport default articleListSlice.reducer\n","import { connectRouter } from 'connected-react-router'\nimport app from 'features/app/appSlice'\nimport article from 'features/article/articleSlice'\nimport articleList from 'features/articleList/articleListSlice'\nimport editor from 'features/editor/editorSlice'\nimport home from 'features/home/homeSlice'\nimport login from 'features/login/loginSlice'\nimport profile from 'features/profile/profileSlice'\nimport register from 'features/register/registerSlice'\nimport settings from 'features/settings/settingsSlice'\nimport { History } from 'history'\n\nconst createReducer = (history: History) => ({\n  app,\n  login,\n  register,\n  settings,\n  editor,\n  profile,\n  articleList,\n  home,\n  article,\n  router: connectRouter(history),\n})\n\nexport default createReducer\n","import { configureStore } from '@reduxjs/toolkit'\nimport createReducer from './reducer'\nimport { routerMiddleware } from 'connected-react-router'\nimport { createBrowserHistory } from 'history'\n\nexport const history = createBrowserHistory({\n  basename: '/realworld-react-redux',\n})\n\nconst store = configureStore({\n  reducer: createReducer(history),\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(routerMiddleware(history)),\n})\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch\n\nexport default store\n","import { AppDispatch, RootState } from './store'\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n","import { User } from 'api/user'\nimport React, { NamedExoticComponent } from 'react'\nimport { Link } from 'react-router-dom'\n\ninterface Props {\n  currentUser: User | null\n}\n\nconst LoggedOut: NamedExoticComponent<Props> = React.memo(({ currentUser }) => {\n  if (currentUser) {\n    return null\n  }\n\n  return (\n    <ul className=\"nav navbar-nav pull-xs-right\">\n      <li className=\"nav-item\">\n        <Link to=\"/\" className=\"nav-link\">\n          Home\n        </Link>\n      </li>\n\n      <li className=\"nav-item\">\n        <Link to=\"/login\" className=\"nav-link\">\n          Sign in\n        </Link>\n      </li>\n\n      <li className=\"nav-item\">\n        <Link to=\"/register\" className=\"nav-link\">\n          Sign up\n        </Link>\n      </li>\n    </ul>\n  )\n})\n\nconst LoggedIn: NamedExoticComponent<Props> = React.memo(({ currentUser }) => {\n  if (!currentUser) {\n    return null\n  }\n\n  return (\n    <ul className=\"nav navbar-nav pull-xs-right\">\n      <li className=\"nav-item\">\n        <Link to=\"/\" className=\"nav-link\">\n          Home\n        </Link>\n      </li>\n\n      <li className=\"nav-item\">\n        <Link to=\"/editor\" className=\"nav-link\">\n          <i className=\"ion-compose\"></i>&nbsp;New Post\n        </Link>\n      </li>\n\n      <li className=\"nav-item\">\n        <Link to=\"/settings\" className=\"nav-link\">\n          <i className=\"ion-gear-a\"></i>&nbsp;Settings\n        </Link>\n      </li>\n\n      <li className=\"nav-item\">\n        <Link to={`/@${currentUser.username}`} className=\"nav-link\">\n          <img\n            src={currentUser.image ?? 'https://static.productionready.io/images/smiley-cyrus.jpg'}\n            className=\"user-pic\"\n            alt={currentUser.username}\n          />\n          {currentUser.username}\n        </Link>\n      </li>\n    </ul>\n  )\n})\n\nconst Header: React.FC<Props> = ({ currentUser }) => {\n  return (\n    <nav className=\"navbar navbar-light\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"navbar-brand\">\n          conduit\n        </Link>\n        <LoggedOut currentUser={currentUser} />\n        <LoggedIn currentUser={currentUser} />\n      </div>\n    </nav>\n  )\n}\n\nexport default Header\n","import { useAppDispatch, useAppSelector } from 'app/hooks'\nimport { selectApp } from 'features/app/appSlice'\nimport React from 'react'\nimport { Link } from 'react-router-dom'\nimport { deleteArticle, selectArticle } from './articleSlice'\n\nconst ArticleActions: React.FC<{}> = () => {\n  const dispatch = useAppDispatch()\n\n  const { currentUser } = useAppSelector(selectApp)\n  const { article } = useAppSelector(selectArticle)\n\n  if (!article) {\n    return <span></span>\n  }\n\n  const canModify = currentUser && currentUser.username === article.author.username\n\n  if (!canModify) {\n    return <span></span>\n  }\n\n  const del = () => {\n    dispatch(deleteArticle(article.slug))\n  }\n\n  return (\n    <span>\n      <Link to={`/editor/${article.slug}`} className=\"btn btn-outline-secondary btn-sm\">\n        <i className=\"ion-edit\"></i> Edit Article\n      </Link>\n\n      <button className=\"btn btn-outline-danger btn-sm\" onClick={del}>\n        <i className=\"ion-trash-a\"></i> Delete Article\n      </button>\n    </span>\n  )\n}\n\nexport default React.memo(ArticleActions)\n","import { useAppSelector } from 'app/hooks'\nimport { selectArticle } from './articleSlice'\nimport React, { memo } from 'react'\nimport { Link } from 'react-router-dom'\nimport ArticleActions from './ArticleActions'\n\nconst ArticleMeta: React.FC<{}> = () => {\n  const { article } = useAppSelector(selectArticle)\n\n  if (!article) {\n    return null\n  }\n\n  return (\n    <div className=\"article-meta\">\n      <Link to={`/@${article.author.username}`}>\n        <img\n          src={article.author.image ?? 'https://static.productionready.io/images/smiley-cyrus.jpg'}\n          alt={article.author.username}\n        />\n      </Link>\n\n      <div className=\"info\">\n        <Link to={`/@${article.author.username}`} className=\"author\">\n          {article.author.username}\n        </Link>\n        <span className=\"date\">{new Date(article.createdAt).toDateString()}</span>\n      </div>\n\n      <ArticleActions />\n    </div>\n  )\n}\n\nexport default memo(ArticleMeta)\n","import React from 'react'\n\ninterface Props {\n  errors?: {\n    [k: string]: string\n  }\n}\n\nconst ListErrors: React.FC<Props> = ({ errors }) => {\n  if (!errors) {\n    return null\n  }\n\n  return (\n    <ul className=\"error-messages\">\n      {Object.keys(errors).map((key) => {\n        return (\n          <li key={key}>\n            {key} {errors[key]}\n          </li>\n        )\n      })}\n    </ul>\n  )\n}\n\nexport default ListErrors\n","import { useAppDispatch, useAppSelector } from 'app/hooks'\nimport { selectApp } from 'features/app/appSlice'\nimport React, { ChangeEventHandler, FormEventHandler, useState } from 'react'\nimport { addComment, selectArticle } from './articleSlice'\n\nconst CommentInput: React.FC<{}> = () => {\n  const dispatch = useAppDispatch()\n\n  const [body, setBody] = useState('')\n  const { currentUser } = useAppSelector(selectApp)\n  const { article } = useAppSelector(selectArticle)\n\n  const createComment: FormEventHandler = (event) => {\n    event.preventDefault()\n    dispatch(addComment({ slug: article!.slug, body }))\n    setBody('')\n  }\n\n  const changeBody: ChangeEventHandler<HTMLTextAreaElement> = (event) => {\n    setBody(event.target.value)\n  }\n\n  return (\n    <form className=\"card comment-form\" onSubmit={createComment}>\n      <div className=\"card-block\">\n        <textarea\n          className=\"form-control\"\n          placeholder=\"Write a comment...\"\n          value={body}\n          onChange={changeBody}\n          rows={3}\n        ></textarea>\n      </div>\n      <div className=\"card-footer\">\n        <img\n          src={currentUser?.image ?? 'https://static.productionready.io/images/smiley-cyrus.jpg'}\n          className=\"comment-author-img\"\n          alt={currentUser?.username}\n        />\n        <button className=\"btn btn-sm btn-primary\" type=\"submit\">\n          Post Comment\n        </button>\n      </div>\n    </form>\n  )\n}\n\nexport default React.memo(CommentInput)\n","import { Comment } from 'api/comment'\nimport { useAppDispatch, useAppSelector } from 'app/hooks'\nimport { selectApp } from 'features/app/appSlice'\nimport React from 'react'\nimport { deleteComment, selectArticle } from './articleSlice'\n\ninterface Props {\n  comment: Comment\n}\n\nconst DeleteButton: React.FC<Props> = ({ comment }) => {\n  const dispatch = useAppDispatch()\n\n  const { currentUser } = useAppSelector(selectApp)\n  const { article } = useAppSelector(selectArticle)\n\n  const del = () => {\n    dispatch(deleteComment({ slug: article!.slug, commentId: comment.id }))\n  }\n\n  const show = currentUser && currentUser.username === comment.author.username\n\n  if (!show) {\n    return null\n  }\n\n  return (\n    <span className=\"mod-options\">\n      <i className=\"ion-trash-a\" onClick={del}></i>\n    </span>\n  )\n}\n\nexport default React.memo(DeleteButton)\n","import { Comment } from 'api/comment'\nimport React from 'react'\nimport { Link } from 'react-router-dom'\nimport DeleteButton from './DeleteButton'\n\ninterface Props {\n  comment: Comment\n}\n\nconst CommentComponent: React.FC<Props> = ({ comment }) => {\n  return (\n    <div className=\"card\">\n      <div className=\"card-block\">\n        <p className=\"card-text\">{comment.body}</p>\n      </div>\n      <div className=\"card-footer\">\n        <Link to={`/@${comment.author.username}`} className=\"comment-author\">\n          <img\n            src={\n              comment.author.image ?? 'https://static.productionready.io/images/smiley-cyrus.jpg'\n            }\n            className=\"comment-author-img\"\n            alt={comment.author.username}\n          />\n        </Link>\n        &nbsp;\n        <Link to={`/@${comment.author.username}`} className=\"comment-author\">\n          {comment.author.username}\n        </Link>\n        <span className=\"date-posted\">{new Date(comment.createdAt).toDateString()}</span>\n        <DeleteButton comment={comment} />\n      </div>\n    </div>\n  )\n}\n\nexport default React.memo(CommentComponent)\n","import { useAppSelector } from 'app/hooks'\nimport Comment from './Comment'\nimport React from 'react'\nimport { selectArticle } from './articleSlice'\n\nconst CommentList: React.FC<{}> = () => {\n  const { comments } = useAppSelector(selectArticle)\n\n  return (\n    <div>\n      {comments.map((comment) => {\n        return <Comment comment={comment} key={comment.id} />\n      })}\n    </div>\n  )\n}\n\nexport default React.memo(CommentList)\n","import { useAppSelector } from 'app/hooks'\nimport ListErrors from 'components/ListErrors'\nimport { selectApp } from 'features/app/appSlice'\nimport React from 'react'\nimport { Link } from 'react-router-dom'\nimport { selectArticle } from './articleSlice'\nimport CommentInput from './CommentInput'\nimport CommentList from './CommentList'\n\nconst CommentContainer: React.FC<{}> = () => {\n  const { currentUser } = useAppSelector(selectApp)\n  const { errors } = useAppSelector(selectArticle)\n\n  if (currentUser) {\n    return (\n      <div className=\"col-xs-12 col-md-8 offset-md-2\">\n        <div>\n          <ListErrors errors={errors}></ListErrors>\n          <CommentInput />\n        </div>\n\n        <CommentList />\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"col-xs-12 col-md-8 offset-md-2\">\n      <p>\n        <Link to=\"/login\">Sign in</Link>\n        &nbsp;or&nbsp;\n        <Link to=\"/register\">sign up</Link>\n        &nbsp;to add comments on this article.\n      </p>\n\n      <CommentList />\n    </div>\n  )\n}\n\nexport default React.memo(CommentContainer)\n","import { useAppDispatch, useAppSelector } from 'app/hooks'\nimport DOMPurify from 'dompurify'\nimport marked from 'marked'\nimport React, { useEffect } from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\nimport ArticleMeta from './ArticleMeta'\nimport { pageLoad, pageUnload, selectArticle } from './articleSlice'\nimport CommentContainer from './CommentContainer'\n\ninterface MatchParams {\n  id: string\n}\n\nconst Article: React.FC<RouteComponentProps<MatchParams>> = ({ match }) => {\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(pageLoad(match.params.id))\n\n    return () => {\n      dispatch(pageUnload())\n    }\n  }, [dispatch, match.params.id])\n\n  const { article } = useAppSelector(selectArticle)\n\n  if (!article) {\n    return null\n  }\n\n  const markup = {\n    __html: DOMPurify.sanitize(marked(article.body), { USE_PROFILES: { html: true } }),\n  }\n\n  return (\n    <div className=\"article-page\">\n      <div className=\"banner\">\n        <div className=\"container\">\n          <h1>{article.title}</h1>\n          <ArticleMeta />\n        </div>\n      </div>\n\n      <div className=\"container page\">\n        <div className=\"row article-content\">\n          <div className=\"col-xs-12\">\n            <div dangerouslySetInnerHTML={markup}></div>\n\n            <ul className=\"tag-list\">\n              {article.tagList.map((tag) => {\n                return (\n                  <li className=\"tag-default tag-pill tag-outline\" key={tag}>\n                    {tag}\n                  </li>\n                )\n              })}\n            </ul>\n          </div>\n        </div>\n\n        <hr />\n\n        <div className=\"article-actions\"></div>\n\n        <div className=\"row\">\n          <CommentContainer />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Article\n","import { ArticleEdit } from 'api/article'\nimport { useAppDispatch, useAppSelector } from 'app/hooks'\nimport ListErrors from 'components/ListErrors'\nimport { pageLoad, pageUnload, selectEditor, submitArticle, updateField } from './editorSlice'\nimport React, {\n  ChangeEventHandler,\n  FormEventHandler,\n  KeyboardEventHandler,\n  useEffect,\n  useState,\n} from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\n\ninterface MatchParams {\n  slug: string\n}\n\nconst Editor: React.FC<RouteComponentProps<MatchParams>> = ({ match }) => {\n  const dispatch = useAppDispatch()\n  const [tagInput, setTagInput] = useState('')\n  const { article, inProgress, errors } = useAppSelector(selectEditor)\n  const { slug, title, description, body, tagList } = article\n\n  const updateFieldEvent: (\n    key: string,\n  ) => ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement> = (key) => (event) =>\n    dispatch(updateField({ [key]: event.target.value }))\n\n  const changeTitle = updateFieldEvent('title')\n\n  const changeDescription = updateFieldEvent('description')\n\n  const changeBody = updateFieldEvent('body')\n\n  const changeTagList = (value: string[]) => dispatch(updateField({ tagList: value }))\n\n  const changeTagInput: ChangeEventHandler<HTMLInputElement> = (event) =>\n    setTagInput(event.target.value)\n\n  const watchForEnter: KeyboardEventHandler = (event) => {\n    if (event.key === 'Enter') {\n      event.preventDefault()\n      onAddTag()\n    }\n  }\n\n  const onAddTag = () => {\n    changeTagList([...tagList, tagInput])\n    setTagInput('')\n  }\n\n  const removeTagHandler = (tag: string) => () => {\n    changeTagList(tagList.filter((t) => t !== tag))\n  }\n\n  const submitForm: FormEventHandler = (event) => {\n    event.preventDefault()\n\n    const article: ArticleEdit = {\n      slug: slug,\n      title: title,\n      description: description,\n      body: body,\n      tagList: tagList,\n    }\n\n    dispatch(submitArticle(article))\n  }\n\n  useEffect(() => {\n    const unmount = () => {\n      dispatch(pageUnload())\n    }\n\n    if (match.params.slug) {\n      dispatch(pageUnload())\n      dispatch(pageLoad(match.params.slug))\n      return unmount\n    }\n\n    dispatch(pageLoad(null))\n\n    return unmount\n  }, [dispatch, match.params.slug])\n\n  return (\n    <div className=\"editor-page\">\n      <div className=\"container page\">\n        <div className=\"row\">\n          <div className=\"col-md-10 offset-md-1 col-xs-12\">\n            <ListErrors errors={errors} />\n\n            <form>\n              <fieldset>\n                <fieldset className=\"form-group\">\n                  <input\n                    className=\"form-control form-control-lg\"\n                    type=\"text\"\n                    placeholder=\"Article Title\"\n                    value={title}\n                    onChange={changeTitle}\n                  />\n                </fieldset>\n\n                <fieldset className=\"form-group\">\n                  <input\n                    className=\"form-control\"\n                    type=\"text\"\n                    placeholder=\"What's this article about?\"\n                    value={description}\n                    onChange={changeDescription}\n                  />\n                </fieldset>\n\n                <fieldset className=\"form-group\">\n                  <textarea\n                    className=\"form-control\"\n                    rows={8}\n                    placeholder=\"Write your article (in markdown)\"\n                    value={body}\n                    onChange={changeBody}\n                  />\n                </fieldset>\n\n                <fieldset className=\"form-group\">\n                  <input\n                    className=\"form-control\"\n                    type=\"text\"\n                    placeholder=\"Enter tags\"\n                    value={tagInput}\n                    onChange={changeTagInput}\n                    onKeyUp={watchForEnter}\n                  />\n\n                  <div className=\"tag-list\">\n                    {tagList.map((tag) => {\n                      return (\n                        <span className=\"tag-default tag-pill\" key={tag}>\n                          <i className=\"ion-close-round\" onClick={removeTagHandler(tag)} />\n                          {tag}\n                        </span>\n                      )\n                    })}\n                  </div>\n                </fieldset>\n\n                <button\n                  className=\"btn btn-lg pull-xs-right btn-primary\"\n                  type=\"button\"\n                  disabled={inProgress}\n                  onClick={submitForm}\n                >\n                  Publish Article\n                </button>\n              </fieldset>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Editor\n","import { useAppSelector } from 'app/hooks'\nimport { selectApp } from 'features/app/appSlice'\nimport React from 'react'\n\nconst Banner: React.FC<{}> = () => {\n  const { token } = useAppSelector(selectApp)\n\n  if (token) {\n    return null\n  }\n\n  return (\n    <div className=\"banner\">\n      <div className=\"container\">\n        <h1 className=\"logo-font\">conduit</h1>\n        <p>A place to share your knowledge.</p>\n      </div>\n    </div>\n  )\n}\n\nexport default React.memo(Banner)\n","import { Article } from 'api/article'\nimport { useAppDispatch } from 'app/hooks'\nimport { favoriteArticle, unfavoriteArticle } from './articleListSlice'\nimport React, { MouseEventHandler } from 'react'\nimport { Link } from 'react-router-dom'\n\nconst FAVORITED_CLASS = 'btn btn-sm btn-primary'\nconst NOT_FAVORITED_CLASS = 'btn btn-sm btn-outline-primary'\n\ninterface Props {\n  article: Article\n}\n\nconst ArticlePreview: React.FC<Props> = ({ article }) => {\n  const dispatch = useAppDispatch()\n\n  const favoriteButtonClass = article.favorited ? FAVORITED_CLASS : NOT_FAVORITED_CLASS\n\n  const handleClick: MouseEventHandler = (event) => {\n    event.preventDefault()\n    if (article.favorited) {\n      dispatch(unfavoriteArticle(article.slug))\n    } else {\n      dispatch(favoriteArticle(article.slug))\n    }\n  }\n\n  return (\n    <div className=\"article-preview\">\n      <div className=\"article-meta\">\n        <Link to={`/@${article.author.username}`}>\n          <img\n            src={\n              article.author.image ?? 'https://static.productionready.io/images/smiley-cyrus.jpg'\n            }\n            alt={article.author.username}\n          />\n        </Link>\n\n        <div className=\"info\">\n          <Link className=\"author\" to={`/@${article.author.username}`}>\n            {article.author.username}\n          </Link>\n          <span className=\"date\">{new Date(article.createdAt).toDateString()}</span>\n        </div>\n\n        <div className=\"pull-xs-right\">\n          <button className={favoriteButtonClass} onClick={handleClick}>\n            <i className=\"ion-heart\"></i> {article.favoritesCount}\n          </button>\n        </div>\n      </div>\n\n      <Link to={`/article/${article.slug}`} className=\"preview-link\">\n        <h1>{article.title}</h1>\n        <p>{article.description}</p>\n        <span>Read more...</span>\n        <ul className=\"tag-list\">\n          {article.tagList.map((tag) => {\n            return (\n              <li className=\"tag-default tag-pill tag-outline\" key={tag}>\n                {tag}\n              </li>\n            )\n          })}\n        </ul>\n      </Link>\n    </div>\n  )\n}\n\nexport default React.memo(ArticlePreview)\n","import { useAppDispatch, useAppSelector } from 'app/hooks'\nimport { articlesByPage, changePage, selectArticleList } from './articleListSlice'\nimport React, { MouseEventHandler } from 'react'\n\nconst ListPagination: React.FC<{}> = () => {\n  const dispatch = useAppDispatch()\n  const { articlesCount, currentPage, pager } = useAppSelector(selectArticleList)\n\n  if (articlesCount <= 10) {\n    return null\n  }\n\n  const range: number[] = []\n  for (let i = 0; i < Math.ceil(articlesCount / 10); ++i) {\n    range.push(i)\n  }\n\n  const setPage = (page: number) => {\n    dispatch(changePage(page))\n    dispatch(articlesByPage({ pager, page }))\n  }\n\n  return (\n    <nav>\n      <ul className=\"pagination\">\n        {range.map((page) => {\n          const isCurrent = page === currentPage\n\n          const onClick: MouseEventHandler = (event) => {\n            event.preventDefault()\n            setPage(page)\n          }\n\n          return (\n            <li\n              className={isCurrent ? 'page-item active' : 'page-item'}\n              onClick={onClick}\n              key={page.toString()}\n            >\n              <button type=\"button\" className=\"page-link\">\n                {page + 1}\n              </button>\n            </li>\n          )\n        })}\n      </ul>\n    </nav>\n  )\n}\n\nexport default React.memo(ListPagination)\n","import { useAppDispatch, useAppSelector } from 'app/hooks'\nimport { pageUnload, selectArticleList } from './articleListSlice'\nimport ArticlePreview from './ArticlePreview'\nimport ListPagination from './ListPagination'\nimport React, { useEffect } from 'react'\n\ninterface Props {}\n\nconst ArticleList: React.FC<Props> = () => {\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    return () => {\n      dispatch(pageUnload())\n    }\n  }, [dispatch])\n\n  const { articles } = useAppSelector(selectArticleList)\n\n  if (!articles) {\n    return <div className=\"article-preview\">Loading...</div>\n  }\n\n  if (articles.length === 0) {\n    return <div className=\"article-preview\">No articles are here... yet.</div>\n  }\n\n  return (\n    <div>\n      {articles.map((article) => {\n        return <ArticlePreview article={article} key={article.slug} />\n      })}\n\n      <ListPagination />\n    </div>\n  )\n}\n\nexport default React.memo(ArticleList)\n","import api from 'api'\nimport { useAppDispatch, useAppSelector } from 'app/hooks'\nimport { selectApp } from 'features/app/appSlice'\nimport ArticleList from 'features/articleList/ArticleList'\nimport React, { MouseEventHandler, NamedExoticComponent } from 'react'\nimport { articlesByTab, changeTab, selectHome } from './homeSlice'\n\nconst YourFeedTab: NamedExoticComponent<{}> = React.memo(() => {\n  const dispatch = useAppDispatch()\n  const { token } = useAppSelector(selectApp)\n  const { tab } = useAppSelector(selectHome)\n\n  if (!token) {\n    return null\n  }\n\n  const clickHandler: MouseEventHandler = (event) => {\n    event.preventDefault()\n    dispatch(changeTab({ tab: 'feed', pager: api.Articles.feed }))\n    dispatch(articlesByTab('feed'))\n  }\n\n  return (\n    <li className=\"nav-item\">\n      <button\n        type=\"button\"\n        className={tab === 'feed' ? 'nav-link active' : 'nav-link'}\n        onClick={clickHandler}\n      >\n        Your Feed\n      </button>\n    </li>\n  )\n})\n\nconst GlobalFeedTab: NamedExoticComponent<{}> = React.memo(() => {\n  const dispatch = useAppDispatch()\n  const { tab } = useAppSelector(selectHome)\n\n  const clickHandler: MouseEventHandler = (event) => {\n    event.preventDefault()\n    dispatch(changeTab({ tab: 'all', pager: api.Articles.all }))\n    dispatch(articlesByTab('all'))\n  }\n\n  return (\n    <li className=\"nav-item\">\n      <button\n        type=\"button\"\n        className={tab === 'all' ? 'nav-link active' : 'nav-link'}\n        onClick={clickHandler}\n      >\n        Global Feed\n      </button>\n    </li>\n  )\n})\n\nconst TagFilterTab: NamedExoticComponent<{}> = React.memo(() => {\n  const { tag } = useAppSelector(selectHome)\n\n  if (!tag) {\n    return null\n  }\n\n  return (\n    <li className=\"nav-item\">\n      <button type=\"button\" className=\"nav-link active\">\n        <i className=\"ion-pound\" /> {tag}\n      </button>\n    </li>\n  )\n})\n\nconst MainView: React.FC<{}> = () => {\n  return (\n    <div className=\"col-md-9\">\n      <div className=\"feed-toggle\">\n        <ul className=\"nav nav-pills outline-active\">\n          <YourFeedTab />\n          <GlobalFeedTab />\n          <TagFilterTab />\n        </ul>\n      </div>\n\n      <ArticleList />\n    </div>\n  )\n}\n\nexport default React.memo(MainView)\n","import api from 'api'\nimport { useAppDispatch, useAppSelector } from 'app/hooks'\nimport React, { MouseEventHandler } from 'react'\nimport { articlesByTag, changeTag, selectHome } from './homeSlice'\n\nconst Tags: React.FC<{}> = () => {\n  const dispatch = useAppDispatch()\n  const { tags } = useAppSelector(selectHome)\n\n  if (!tags) {\n    return <div>Loading Tags...</div>\n  }\n\n  return (\n    <div className=\"tag-list\">\n      {tags.map((tag) => {\n        const handleClick: MouseEventHandler = (event) => {\n          event.preventDefault()\n          dispatch(changeTag({ tag, pager: (page) => api.Articles.byTag(tag, page) }))\n          dispatch(articlesByTag(tag))\n        }\n\n        return (\n          <button type=\"button\" className=\"tag-default tag-pill\" key={tag} onClick={handleClick}>\n            {tag}\n          </button>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default React.memo(Tags)\n","import api from 'api'\nimport { useAppDispatch, useAppSelector } from 'app/hooks'\nimport { selectApp } from 'features/app/appSlice'\nimport React, { useEffect } from 'react'\nimport Banner from './Banner'\nimport { changeTab, pageLoad, pageUnload } from './homeSlice'\nimport MainView from './MainView'\nimport Tags from './Tags'\n\nconst Home: React.FC<{}> = () => {\n  const dispatch = useAppDispatch()\n  const { token } = useAppSelector(selectApp)\n\n  useEffect(() => {\n    const tab = token ? 'feed' : 'all'\n    const pager = token ? api.Articles.feed : api.Articles.all\n    dispatch(changeTab({ tab, pager }))\n    dispatch(pageLoad(token))\n\n    return () => {\n      dispatch(pageUnload())\n    }\n  }, [dispatch, token])\n\n  return (\n    <div className=\"home-page\">\n      <Banner />\n\n      <div className=\"container page\">\n        <div className=\"row\">\n          <MainView />\n\n          <div className=\"col-md-3\">\n            <div className=\"sidebar\">\n              <p>Popular Tags</p>\n\n              <Tags />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Home\n","import { useAppDispatch, useAppSelector } from 'app/hooks'\nimport ListErrors from 'components/ListErrors'\nimport { auth, selectLogin, pageUnload } from './loginSlice'\nimport React, { ChangeEventHandler, FormEventHandler, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Login: React.FC = () => {\n  const dispatch = useAppDispatch()\n  const { inProgress, errors } = useAppSelector(selectLogin)\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const changeEmail: ChangeEventHandler<HTMLInputElement> = (event) => setEmail(event.target.value)\n\n  const changePassword: ChangeEventHandler<HTMLInputElement> = (event) =>\n    setPassword(event.target.value)\n\n  const submitForm =\n    (email: string, password: string): FormEventHandler =>\n    (event) => {\n      event.preventDefault()\n      dispatch(auth({ email, password }))\n    }\n\n  useEffect(() => {\n    return () => {\n      dispatch(pageUnload())\n    }\n  }, [dispatch])\n\n  return (\n    <div className=\"auth-page\">\n      <div className=\"container page\">\n        <div className=\"row\">\n          <div className=\"col-md-6 offset-md-3 col-xs-12\">\n            <h1 className=\"text-xs-center\">Sign In</h1>\n            <p className=\"text-xs-center\">\n              <Link to=\"/register\">Need an account?</Link>\n            </p>\n\n            <ListErrors errors={errors} />\n\n            <form onSubmit={submitForm(email, password)}>\n              <fieldset>\n                <fieldset className=\"form-group\">\n                  <input\n                    className=\"form-control form-control-lg\"\n                    autoComplete=\"username\"\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    value={email}\n                    onChange={changeEmail}\n                  />\n                </fieldset>\n\n                <fieldset className=\"form-group\">\n                  <input\n                    className=\"form-control form-control-lg\"\n                    type=\"password\"\n                    autoComplete=\"current-password\"\n                    placeholder=\"Password\"\n                    value={password}\n                    onChange={changePassword}\n                  />\n                </fieldset>\n\n                <button\n                  className=\"btn btn-lg btn-primary pull-xs-right\"\n                  type=\"submit\"\n                  disabled={inProgress}\n                >\n                  Sign in\n                </button>\n              </fieldset>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Login\n","import { AsyncThunk } from '@reduxjs/toolkit'\nimport { ArticleListResponse } from 'api/article'\nimport { Profile, ProfileResponse } from 'api/profile'\nimport { useAppDispatch, useAppSelector } from 'app/hooks'\nimport { selectApp } from 'features/app/appSlice'\nimport ArticleList from 'features/articleList/ArticleList'\nimport React, { MouseEventHandler, NamedExoticComponent, useEffect } from 'react'\nimport { Link, RouteComponentProps } from 'react-router-dom'\nimport { followUser, selectProfile, unfollowUser } from './profileSlice'\n\nconst EditProfileSettings: NamedExoticComponent<{ isUser: boolean }> = React.memo((props) => {\n  if (props.isUser) {\n    return (\n      <Link to=\"/settings\" className=\"btn btn-sm btn-outline-secondary action-btn\">\n        <i className=\"ion-gear-a\"></i> Edit Profile Settings\n      </Link>\n    )\n  }\n\n  return null\n})\n\nconst FollowUserButton: NamedExoticComponent<{\n  isUser: boolean\n  user: Profile\n  follow: (username: string) => void\n  unfollow: (username: string) => void\n}> = React.memo(({ isUser, user, follow, unfollow }) => {\n  if (isUser) {\n    return null\n  }\n\n  let classes = 'btn btn-sm action-btn'\n  if (user.following) {\n    classes += ' btn-secondary'\n  } else {\n    classes += ' btn-outline-secondary'\n  }\n\n  const handleClick: MouseEventHandler = (event) => {\n    event.preventDefault()\n    if (user.following) {\n      unfollow(user.username)\n    } else {\n      follow(user.username)\n    }\n  }\n\n  return (\n    <button className={classes} onClick={handleClick}>\n      <i className=\"ion-plus-round\"></i>\n      &nbsp;\n      {user.following ? 'Unfollow' : 'Follow'} {user.username}\n    </button>\n  )\n})\n\ntype Props = {\n  pageLoad: AsyncThunk<[ProfileResponse, ArticleListResponse], string, {}>\n  isFavorite?: boolean\n} & RouteComponentProps<{\n  username: string\n}>\n\nconst ProfileGeneral: React.FC<Props> = ({ match, pageLoad, isFavorite }) => {\n  const dispatch = useAppDispatch()\n  const { currentUser } = useAppSelector(selectApp)\n  const { profile } = useAppSelector(selectProfile)\n\n  const onFollow = (username: string) => {\n    dispatch(followUser(username))\n  }\n\n  const onUnfollow = (username: string) => {\n    dispatch(unfollowUser(username))\n  }\n\n  useEffect(() => {\n    dispatch(pageLoad(match.params.username))\n  }, [dispatch, pageLoad, match.params.username])\n\n  if (!profile) {\n    return null\n  }\n\n  const isUser = currentUser ? profile.username === currentUser.username : false\n\n  return (\n    <div className=\"profile-page\">\n      <div className=\"user-info\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-xs-12 col-md-10 offset-md-1\">\n              <img\n                src={profile.image ?? 'https://static.productionready.io/images/smiley-cyrus.jpg'}\n                className=\"user-img\"\n                alt={profile.username}\n              />\n              <h4>{profile.username}</h4>\n              <p>{profile.bio}</p>\n\n              <EditProfileSettings isUser={isUser} />\n              <FollowUserButton\n                isUser={isUser}\n                user={profile}\n                follow={onFollow}\n                unfollow={onUnfollow}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-xs-12 col-md-10 offset-md-1\">\n            <div className=\"articles-toggle\">\n              <ul className=\"nav nav-pills outline-active\">\n                <li className=\"nav-item\">\n                  <Link\n                    className={isFavorite ? 'nav-link' : 'nav-link active'}\n                    to={`/@${profile.username}`}\n                  >\n                    My Articles\n                  </Link>\n                </li>\n\n                <li className=\"nav-item\">\n                  <Link\n                    className={isFavorite ? 'nav-link active' : 'nav-link'}\n                    to={`/@${profile.username}/favorites`}\n                  >\n                    Favorited Articles\n                  </Link>\n                </li>\n              </ul>\n            </div>\n\n            <ArticleList />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ProfileGeneral\n","import { pageLoad } from './profileSlice'\nimport React from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\nimport ProfileGeneral from './ProfileGeneral'\n\ntype Props = RouteComponentProps<{ username: string }>\n\nconst Profile: React.FC<Props> = (props) => {\n  return <ProfileGeneral pageLoad={pageLoad} {...props} />\n}\n\nexport default Profile\n","import { favoritesPageLoad } from './profileSlice'\nimport React from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\nimport ProfileGeneral from './ProfileGeneral'\n\ntype Props = RouteComponentProps<{ username: string }>\n\nconst ProfileFavorites: React.FC<Props> = (props) => {\n  return <ProfileGeneral isFavorite={true} pageLoad={favoritesPageLoad} {...props} />\n}\n\nexport default ProfileFavorites\n","import { useAppDispatch, useAppSelector } from 'app/hooks'\nimport ListErrors from 'components/ListErrors'\nimport { selectRegister, signup, pageUnload } from './registerSlice'\nimport React, { ChangeEventHandler, FormEventHandler, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Register: React.FC = () => {\n  const dispatch = useAppDispatch()\n  const { inProgress, errors } = useAppSelector(selectRegister)\n  const [username, setUsername] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const changeUsername: ChangeEventHandler<HTMLInputElement> = (event) =>\n    setUsername(event.target.value)\n\n  const changeEmail: ChangeEventHandler<HTMLInputElement> = (event) => setEmail(event.target.value)\n\n  const changePassword: ChangeEventHandler<HTMLInputElement> = (event) =>\n    setPassword(event.target.value)\n\n  const submitForm =\n    (username: string, email: string, password: string): FormEventHandler =>\n    (event) => {\n      event.preventDefault()\n      dispatch(signup({ username, email, password }))\n    }\n\n  useEffect(() => {\n    return () => {\n      dispatch(pageUnload())\n    }\n  }, [dispatch])\n\n  return (\n    <div className=\"auth-page\">\n      <div className=\"container page\">\n        <div className=\"row\">\n          <div className=\"col-md-6 offset-md-3 col-xs-12\">\n            <h1 className=\"text-xs-center\">Sign Up</h1>\n            <p className=\"text-xs-center\">\n              <Link to=\"/login\">Have an account?</Link>\n            </p>\n\n            <ListErrors errors={errors} />\n\n            <form onSubmit={submitForm(username, email, password)}>\n              <fieldset>\n                <fieldset className=\"form-group\">\n                  <input\n                    className=\"form-control form-control-lg\"\n                    type=\"text\"\n                    placeholder=\"Username\"\n                    value={username}\n                    onChange={changeUsername}\n                  />\n                </fieldset>\n\n                <fieldset className=\"form-group\">\n                  <input\n                    className=\"form-control form-control-lg\"\n                    type=\"email\"\n                    autoComplete=\"username\"\n                    placeholder=\"Email\"\n                    value={email}\n                    onChange={changeEmail}\n                  />\n                </fieldset>\n\n                <fieldset className=\"form-group\">\n                  <input\n                    className=\"form-control form-control-lg\"\n                    type=\"password\"\n                    autoComplete=\"current-password\"\n                    placeholder=\"Password\"\n                    value={password}\n                    onChange={changePassword}\n                  />\n                </fieldset>\n\n                <button\n                  className=\"btn btn-lg btn-primary pull-xs-right\"\n                  type=\"submit\"\n                  disabled={inProgress}\n                >\n                  Sign up\n                </button>\n              </fieldset>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Register\n","import { SaveUserRequest } from 'api/user'\nimport { useAppDispatch, useAppSelector } from 'app/hooks'\nimport { selectApp } from 'features/app/appSlice'\nimport { ChangeEventHandler, FormEventHandler, useEffect, useState } from 'react'\nimport { pageUnload, selectSettings } from './settingsSlice'\n\ninterface Props {\n  onSubmitForm: (user: SaveUserRequest) => void\n}\n\nconst SettingsForm: React.FC<Props> = ({ onSubmitForm }) => {\n  const dispatch = useAppDispatch()\n  const { currentUser } = useAppSelector(selectApp)\n  const { inProgress } = useAppSelector(selectSettings)\n  const [user, setUser] = useState({\n    image: currentUser?.image ?? 'https://static.productionready.io/images/smiley-cyrus.jpg',\n    username: currentUser?.username ?? '',\n    bio: currentUser?.bio ?? '',\n    email: currentUser?.email ?? '',\n    password: '',\n  })\n\n  const { username, email, password, bio, image } = user\n\n  const submitForm: FormEventHandler = (event) => {\n    event.preventDefault()\n\n    const user: SaveUserRequest = {\n      username: username,\n      email: email,\n      password: password || undefined,\n      bio: bio,\n      image: image,\n    }\n\n    onSubmitForm(user)\n  }\n\n  const updateState =\n    (field: string): ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement> =>\n    (event) =>\n      setUser({ ...user, [field]: event.target.value })\n\n  useEffect(() => {\n    return () => {\n      dispatch(pageUnload())\n    }\n  }, [dispatch])\n\n  return (\n    <form onSubmit={submitForm}>\n      <fieldset>\n        <fieldset className=\"form-group\">\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            placeholder=\"URL of profile picture\"\n            value={image ?? ''}\n            onChange={updateState('image')}\n          />\n        </fieldset>\n\n        <fieldset className=\"form-group\">\n          <input\n            className=\"form-control form-control-lg\"\n            type=\"text\"\n            placeholder=\"Username\"\n            value={username}\n            onChange={updateState('username')}\n          />\n        </fieldset>\n\n        <fieldset className=\"form-group\">\n          <textarea\n            className=\"form-control form-control-lg\"\n            rows={8}\n            placeholder=\"Short bio about you\"\n            value={bio ?? ''}\n            onChange={updateState('bio')}\n          />\n        </fieldset>\n\n        <fieldset className=\"form-group\">\n          <input\n            className=\"form-control form-control-lg\"\n            autoComplete=\"username\"\n            type=\"email\"\n            placeholder=\"Email\"\n            value={email}\n            onChange={updateState('email')}\n          />\n        </fieldset>\n\n        <fieldset className=\"form-group\">\n          <input\n            className=\"form-control form-control-lg\"\n            type=\"password\"\n            autoComplete=\"current-password\"\n            placeholder=\"New Password\"\n            value={password}\n            onChange={updateState('password')}\n          />\n        </fieldset>\n\n        <button\n          className=\"btn btn-lg btn-primary pull-xs-right\"\n          type=\"submit\"\n          disabled={inProgress}\n        >\n          Update Settings\n        </button>\n      </fieldset>\n    </form>\n  )\n}\n\nexport default SettingsForm\n","import api from 'api'\nimport { SaveUserRequest } from 'api/user'\nimport { useAppDispatch, useAppSelector } from 'app/hooks'\nimport ListErrors from 'components/ListErrors'\nimport { logout } from 'features/app/appSlice'\nimport React, { MouseEventHandler } from 'react'\nimport SettingsForm from './SettingsForm'\nimport { saveUser, selectSettings } from './settingsSlice'\n\nconst Settings: React.FC = () => {\n  const dispatch = useAppDispatch()\n  const { errors } = useAppSelector(selectSettings)\n\n  const onSubmitForm = (user: SaveUserRequest) => dispatch(saveUser(user))\n\n  const clickLogout: MouseEventHandler = () => {\n    window.localStorage.removeItem('jwt')\n    api.setToken(null)\n    dispatch(logout())\n  }\n\n  return (\n    <div className=\"settings-page\">\n      <div className=\"container page\">\n        <div className=\"row\">\n          <div className=\"col-md-6 offset-md-3 col-xs-12\">\n            <h1 className=\"text-xs-center\">Your Settings</h1>\n\n            <ListErrors errors={errors} />\n\n            <SettingsForm onSubmitForm={onSubmitForm} />\n\n            <hr />\n\n            <button className=\"btn btn-outline-danger\" onClick={clickLogout}>\n              Or click here to logout.\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Settings\n","import { useAppDispatch, useAppSelector } from 'app/hooks'\nimport Header from 'components/Header'\nimport { push } from 'connected-react-router'\nimport Article from 'features/article/Article'\nimport Editor from 'features/editor/Editor'\nimport Home from 'features/home/Home'\nimport Login from 'features/login/Login'\nimport Profile from 'features/profile/Profile'\nimport ProfileFavorites from 'features/profile/ProfileFavorites'\nimport Register from 'features/register/Register'\nimport Settings from 'features/settings/Settings'\nimport React, { Suspense, useEffect } from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport { pageLoad, redirect, selectApp } from './appSlice'\n\nconst App: React.FC = () => {\n  const dispatch = useAppDispatch()\n  const { appLoaded, currentUser, redirectTo } = useAppSelector(selectApp)\n\n  useEffect(() => {\n    dispatch(pageLoad())\n  }, [dispatch])\n\n  useEffect(() => {\n    if (redirectTo) {\n      dispatch(push(redirectTo))\n      dispatch(redirect())\n    }\n  }, [dispatch, redirectTo])\n\n  if (!appLoaded) {\n    return (\n      <div>\n        <Header currentUser={currentUser} />\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <Header currentUser={currentUser} />\n      <Suspense fallback={<p>Loading...</p>}>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/register\" component={Register} />\n          <Route path=\"/editor/:slug\" component={Editor} />\n          <Route path=\"/editor\" component={Editor} />\n          <Route path=\"/article/:id\" component={Article} />\n          <Route path=\"/settings\" component={Settings} />\n          <Route path=\"/@:username/favorites\" component={ProfileFavorites} />\n          <Route path=\"/@:username\" component={Profile} />\n        </Switch>\n      </Suspense>\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import store, { history } from 'app/store'\nimport { ConnectedRouter } from 'connected-react-router'\nimport App from 'features/app/App'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { Route, Switch } from 'react-router-dom'\nimport reportWebVitals from 'reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ConnectedRouter history={history}>\n        <Switch>\n          <Route path=\"/\" component={App} />\n        </Switch>\n      </ConnectedRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}